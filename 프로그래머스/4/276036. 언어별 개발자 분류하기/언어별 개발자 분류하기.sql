/*
SELECT CASE
        WHEN B.CATEGORY = 'Front End'
            AND A.ID IN (
                SELECT ID
                FROM DEVELOPERS
                JOIN SKILLCODES
                ON DEVELOPERS.SKILL_CODE & SKILLCODES.CODE > 0
                WHERE SKILLCODES.NAME = 'Python'
            ) THEN 'A'
        WHEN B.NAME = 'C#' THEN 'B'
        WHEN B.CATEGORY = 'Front End' THEN 'C'
    END AS GRADE,
    A.ID, A.EMAIL
FROM DEVELOPERS AS A
JOIN SKILLCODES AS B
ON A.SKILL_CODE & B.CODE > 0
GROUP BY GRADE, A.ID, A.EMAIL
HAVING GRADE IS NOT NULL
ORDER BY GRADE, A.ID
*/
SELECT 
    CASE 
        WHEN ( D.SKILL_CODE) & ( SELECT SUM(CODE) FROM SKILLCODES GROUP BY CATEGORY HAVING CATEGORY IN ('FRONT END')) > 0 AND  ( D.SKILL_CODE ) & ( SELECT CODE FROM SKILLCODES WHERE NAME = 'PYTHON') > 0  THEN 'A'
        WHEN ( D.SKILL_CODE ) & ( SELECT CODE FROM SKILLCODES WHERE NAME = 'C#') > 0 THEN 'B'
        WHEN ( D.SKILL_CODE ) & ( SELECT SUM(CODE) FROM SKILLCODES GROUP BY CATEGORY HAVING CATEGORY IN ('FRONT END')) > 0 THEN 'C'
        ELSE NULL
    END AS GRADE, D.ID, D.EMAIL
FROM SKILLCODES AS S
INNER JOIN DEVELOPERS AS D
ON S.CODE & D.SKILL_CODE > 0
GROUP BY GRADE, D.ID, D.EMAIL
HAVING GRADE IS NOT NULL
ORDER BY GRADE ASC, D.ID ASC

/*
SELECT * 
FROM DEVELOPERS AS A
JOIN SKILLCODES AS B
ON A.SKILL_CODE & B.CODE
ORDER BY A.ID
*/